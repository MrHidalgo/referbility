{"version":3,"sources":["_shared/_fonts.scss","app.css","_shared/_main-setting-reset.scss","_utilities/_mixin.scss","_shared/_grid.scss"],"names":[],"mappings":"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","file":"../app.css","sourcesContent":["///\r\n/// Mixin generate @font-face\r\n/// ===============\r\n@mixin mixinFontFace($fontName, $fontNameExt, $fontPath, $fontWeight, $fontExtension: eot woff2 woff ttf svg) {\r\n\t$src: null;\r\n\t$srcEot: null;\r\n\r\n\t$extensionModObj: (\r\n\t\teot: \"?iefix\",\r\n\t\tsvg: \"#\" + $fontName\r\n\t);\r\n\r\n\t$formats: (\r\n\t\teot: \"embedded-opentype\",\r\n\t\totf: \"opentype\",\r\n\t\tttf: \"truetype\"\r\n\t);\r\n\r\n\t@each $ext in $fontExtension {\r\n\r\n\r\n\t\t$extensionModsValue:\r\n\t\t\tif(map-has-key($extensionModObj, $ext), $ext + map-get($extensionModObj, $ext), $ext);\r\n\r\n\t\t$format:\r\n\t\t\tif(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\r\n\r\n\r\n\t\t@if($ext == \"eot\") {\r\n\t\t\t$srcEot:\r\n\t\t\t\tappend($srcEot, url(quote($fontPath + $fontName + $fontNameExt + \".\" + $ext)));\r\n\t\t\t$src:\r\n\t\t\t\tappend($src,\r\n\t\t\t\t\turl(quote($fontPath + $fontName + $fontNameExt + \".\" + $extensionModsValue)) format(quote($format)), comma\r\n\t\t\t\t);\r\n\t\t} @else {\r\n\t\t\t$src:\r\n\t\t\t\tappend($src,\r\n\t\t\t\t\turl(quote($fontPath + $fontName + $fontNameExt + \".\" + $extensionModsValue)) format(quote($format)), comma\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t@font-face {\r\n\t\tfont-family: quote($fontName);\r\n\r\n\t\tsrc: $srcEot;\r\n\t\tsrc: $src;\r\n\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: $fontWeight;\r\n\t}\r\n}\r\n\r\n\r\n/// ===============\r\n/// CALL MIXIN FOR BUILD @FONT-FACE\r\n///\r\n/// Example:\r\n///\r\n/// @include mixinFontFace(\"JournalRegular\", \"-Bold\", \"../fonts/\", normal, otf eot woff2 woff ttf svg);\r\n/// @include mixinFontFace(\"SF-Pro-Text\", \"-Bold\", \"../fonts/\", bold, otf);\r\n/// @include mixinFontFace(\"SF-Pro-Text\", \"-Heavy\", \"../fonts/\", 800, otf);\r\n///\r\n/// ===============\r\n//@import url('https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900');\r\n\r\n@include mixinFontFace(\"Airbnb Cereal App\", \"-Light\", \"../fonts/\", 300, otf eot woff2 woff ttf svg);\r\n@include mixinFontFace(\"Airbnb Cereal App\", \"-Black\", \"../fonts/\", 900, otf eot woff2 woff ttf svg);\r\n@include mixinFontFace(\"Airbnb Cereal App\", \"-Medium\", \"../fonts/\", 500, otf eot woff2 woff ttf svg);\r\n@include mixinFontFace(\"Airbnb Cereal App\", \"-Book\", \"../fonts/\", normal, otf eot woff2 woff ttf svg);\r\n@include mixinFontFace(\"Airbnb Cereal App\", \"-Bold\", \"../fonts/\", bold, otf eot woff2 woff ttf svg);\r\n@include mixinFontFace(\"Airbnb Cereal App\", \"-ExtraBold\", \"../fonts/\", 800, otf eot woff2 woff ttf svg);","@font-face {\n  font-family: \"Airbnb Cereal App\";\n  src: url(\"../fonts/Airbnb Cereal App-Light.eot\");\n  src: url(\"../fonts/Airbnb Cereal App-Light.otf\") format(\"opentype\"), url(\"../fonts/Airbnb Cereal App-Light.eot?iefix\") format(\"embedded-opentype\"), url(\"../fonts/Airbnb Cereal App-Light.woff2\") format(\"woff2\"), url(\"../fonts/Airbnb Cereal App-Light.woff\") format(\"woff\"), url(\"../fonts/Airbnb Cereal App-Light.ttf\") format(\"truetype\"), url(\"../fonts/Airbnb Cereal App-Light.svg#Airbnb Cereal App\") format(\"svg\");\n  font-style: normal;\n  font-weight: 300;\n}\n\n@font-face {\n  font-family: \"Airbnb Cereal App\";\n  src: url(\"../fonts/Airbnb Cereal App-Black.eot\");\n  src: url(\"../fonts/Airbnb Cereal App-Black.otf\") format(\"opentype\"), url(\"../fonts/Airbnb Cereal App-Black.eot?iefix\") format(\"embedded-opentype\"), url(\"../fonts/Airbnb Cereal App-Black.woff2\") format(\"woff2\"), url(\"../fonts/Airbnb Cereal App-Black.woff\") format(\"woff\"), url(\"../fonts/Airbnb Cereal App-Black.ttf\") format(\"truetype\"), url(\"../fonts/Airbnb Cereal App-Black.svg#Airbnb Cereal App\") format(\"svg\");\n  font-style: normal;\n  font-weight: 900;\n}\n\n@font-face {\n  font-family: \"Airbnb Cereal App\";\n  src: url(\"../fonts/Airbnb Cereal App-Medium.eot\");\n  src: url(\"../fonts/Airbnb Cereal App-Medium.otf\") format(\"opentype\"), url(\"../fonts/Airbnb Cereal App-Medium.eot?iefix\") format(\"embedded-opentype\"), url(\"../fonts/Airbnb Cereal App-Medium.woff2\") format(\"woff2\"), url(\"../fonts/Airbnb Cereal App-Medium.woff\") format(\"woff\"), url(\"../fonts/Airbnb Cereal App-Medium.ttf\") format(\"truetype\"), url(\"../fonts/Airbnb Cereal App-Medium.svg#Airbnb Cereal App\") format(\"svg\");\n  font-style: normal;\n  font-weight: 500;\n}\n\n@font-face {\n  font-family: \"Airbnb Cereal App\";\n  src: url(\"../fonts/Airbnb Cereal App-Book.eot\");\n  src: url(\"../fonts/Airbnb Cereal App-Book.otf\") format(\"opentype\"), url(\"../fonts/Airbnb Cereal App-Book.eot?iefix\") format(\"embedded-opentype\"), url(\"../fonts/Airbnb Cereal App-Book.woff2\") format(\"woff2\"), url(\"../fonts/Airbnb Cereal App-Book.woff\") format(\"woff\"), url(\"../fonts/Airbnb Cereal App-Book.ttf\") format(\"truetype\"), url(\"../fonts/Airbnb Cereal App-Book.svg#Airbnb Cereal App\") format(\"svg\");\n  font-style: normal;\n  font-weight: normal;\n}\n\n@font-face {\n  font-family: \"Airbnb Cereal App\";\n  src: url(\"../fonts/Airbnb Cereal App-Bold.eot\");\n  src: url(\"../fonts/Airbnb Cereal App-Bold.otf\") format(\"opentype\"), url(\"../fonts/Airbnb Cereal App-Bold.eot?iefix\") format(\"embedded-opentype\"), url(\"../fonts/Airbnb Cereal App-Bold.woff2\") format(\"woff2\"), url(\"../fonts/Airbnb Cereal App-Bold.woff\") format(\"woff\"), url(\"../fonts/Airbnb Cereal App-Bold.ttf\") format(\"truetype\"), url(\"../fonts/Airbnb Cereal App-Bold.svg#Airbnb Cereal App\") format(\"svg\");\n  font-style: normal;\n  font-weight: bold;\n}\n\n@font-face {\n  font-family: \"Airbnb Cereal App\";\n  src: url(\"../fonts/Airbnb Cereal App-ExtraBold.eot\");\n  src: url(\"../fonts/Airbnb Cereal App-ExtraBold.otf\") format(\"opentype\"), url(\"../fonts/Airbnb Cereal App-ExtraBold.eot?iefix\") format(\"embedded-opentype\"), url(\"../fonts/Airbnb Cereal App-ExtraBold.woff2\") format(\"woff2\"), url(\"../fonts/Airbnb Cereal App-ExtraBold.woff\") format(\"woff\"), url(\"../fonts/Airbnb Cereal App-ExtraBold.ttf\") format(\"truetype\"), url(\"../fonts/Airbnb Cereal App-ExtraBold.svg#Airbnb Cereal App\") format(\"svg\");\n  font-style: normal;\n  font-weight: 800;\n}\n\n/* line 1, src/scss/_shared/_main-setting-reset.scss */\nhtml,\nbody {\n  width: 100%;\n  height: auto;\n}\n\n/* line 6, src/scss/_shared/_main-setting-reset.scss */\nhtml.is-hideScroll,\nbody.is-hideScroll {\n  width: 100%;\n  overflow: hidden !important;\n  -webkit-overflow-scrolling: auto;\n}\n\n@media screen and (max-width: 1023px) {\n  /* line 6, src/scss/_shared/_main-setting-reset.scss */\n  html.is-hideScroll,\n  body.is-hideScroll {\n    height: 100%;\n    max-height: 100%;\n  }\n}\n\n/* line 18, src/scss/_shared/_main-setting-reset.scss */\nhtml.is-hideScroll {\n  height: 100%;\n  max-height: 100%;\n}\n\n/* line 25, src/scss/_shared/_main-setting-reset.scss */\nhtml {\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\n/* line 31, src/scss/_shared/_main-setting-reset.scss */\nbody {\n  overflow-x: hidden;\n  position: relative;\n  margin: 0;\n  padding: 0;\n  background-image: linear-gradient(to bottom, #ffffff, #f8f7ff);\n  line-height: 1.42857143;\n  font-size: 14px;\n  font-weight: normal;\n  font-family: \"Airbnb Cereal App\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* line 45, src/scss/_shared/_main-setting-reset.scss */\nbody {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n/* line 50, src/scss/_shared/_main-setting-reset.scss */\nbody > .body {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1 0 auto;\n}\n\n/* line 56, src/scss/_shared/_main-setting-reset.scss */\nbody > .body--start {\n  justify-content: flex-start;\n}\n\n/* line 63, src/scss/_shared/_main-setting-reset.scss */\n* {\n  box-sizing: border-box;\n}\n\n/* line 66, src/scss/_shared/_main-setting-reset.scss */\n*:before, *:after {\n  box-sizing: border-box;\n}\n\n/* line 73, src/scss/_shared/_main-setting-reset.scss */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-size: 100%;\n  margin: 0;\n}\n\n/* line 83, src/scss/_shared/_main-setting-reset.scss */\nbutton,\ninput {\n  overflow: visible;\n}\n\n/* line 89, src/scss/_shared/_main-setting-reset.scss */\nbutton[disabled] {\n  opacity: 0.55;\n  cursor: not-allowed;\n}\n\n/* line 95, src/scss/_shared/_main-setting-reset.scss */\n[type=\"search\"] {\n  -webkit-appearance: textfield;\n  outline-offset: -2px;\n}\n\n/* line 101, src/scss/_shared/_main-setting-reset.scss */\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/* line 107, src/scss/_shared/_main-setting-reset.scss */\ntextarea {\n  overflow: auto;\n}\n\n/* line 112, src/scss/_shared/_main-setting-reset.scss */\np,\nh1, h2, h3, h4, h5, h6,\nhr {\n  margin: 0;\n  padding: 0;\n}\n\n/* line 120, src/scss/_shared/_main-setting-reset.scss */\nul {\n  margin: 0;\n  padding: 0;\n}\n\n/* line 125, src/scss/_shared/_main-setting-reset.scss */\nul li {\n  list-style: none;\n}\n\n/* line 131, src/scss/_shared/_main-setting-reset.scss */\na {\n  outline: none;\n  text-decoration: none;\n}\n\n/* line 136, src/scss/_shared/_main-setting-reset.scss */\na:hover, a:focus {\n  text-decoration: none;\n}\n\n/* line 143, src/scss/_shared/_main-setting-reset.scss */\ninput[type=\"text\"] {\n  appearance: none;\n}\n\n/* line 147, src/scss/_shared/_main-setting-reset.scss */\npicture {\n  display: flex;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n/* line 8, src/scss/_shared/_grid.scss */\n.c-grid, .c-grid-fluid {\n  width: 100%;\n  margin-right: auto;\n  margin-left: auto;\n  padding-right: 15px;\n  padding-left: 15px;\n}\n\n/* line 20, src/scss/_shared/_grid.scss */\n.c-grid {\n  max-width: 1200px;\n}\n\n/* line 27, src/scss/_shared/_grid.scss */\n.c-grid-fluid {\n  max-width: 100%;\n}\n\n@media screen and (min-width: 576px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1200px;\n  }\n}\n\n@media screen and (min-width: 992px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1200px;\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1200px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1200px;\n  }\n}\n\n@media screen and (min-width: 1366px) {\n  /* line 35, src/scss/_shared/_grid.scss */\n  .c-grid {\n    max-width: 1200px;\n  }\n}\n","html,\r\nbody {\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  &.is-hideScroll {\r\n    width: 100%;\r\n    overflow: hidden !important;\r\n    -webkit-overflow-scrolling: auto;\r\n    @include adaptive(1023) {\r\n      height: 100%;\r\n      max-height: 100%;\r\n    }\r\n  }\r\n}\r\n\r\nhtml {\r\n  &.is-hideScroll {\r\n    height: 100%;\r\n    max-height: 100%;\r\n  }\r\n}\r\n\r\n\r\nhtml {\r\n  -ms-overflow-style: scrollbar;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n\r\nbody {\r\n  overflow-x: hidden;\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-image: linear-gradient(to bottom, #ffffff, #f8f7ff);\r\n  line-height: 1.42857143;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n  font-family: \"Airbnb Cereal App\", sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n\r\n  > .body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex: 1 0 auto;\r\n\r\n    &--start {\r\n      justify-content: flex-start;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n* {\r\n  box-sizing: border-box;\r\n\r\n  &:before,\r\n  &:after {\r\n    box-sizing: border-box;\r\n  }\r\n}\r\n\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  font-size: 100%;\r\n  margin: 0;\r\n}\r\n\r\n\r\nbutton,\r\ninput {\r\n  overflow: visible;\r\n}\r\n\r\n\r\nbutton[disabled] {\r\n  opacity: 0.55;\r\n  cursor: not-allowed;\r\n}\r\n\r\n\r\n[type=\"search\"] {\r\n  -webkit-appearance: textfield;\r\n  outline-offset: -2px;\r\n}\r\n\r\n\r\n[type=\"search\"]::-webkit-search-cancel-button,\r\n[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n\r\np,\r\nh1, h2, h3, h4, h5, h6,\r\nhr {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n\r\nul {\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n}\r\n\r\n\r\na {\r\n  outline: none;\r\n  text-decoration: none;\r\n\r\n\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n\r\ninput[type=\"text\"] {\r\n  appearance: none;\r\n}\r\n\r\npicture {\r\n  display: flex;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n","////\r\n/// @group  Mixin\r\n////\r\n\r\n/// \r\n/// Mixin setting the width and height element.\r\n///\r\n/// @name   mixinDimensions\r\n///\r\n/// @param  {String}  $width             - The width property sets the width of an element.\r\n/// @param  {String}  $height  [$width]  - The height property sets the height of an element.\r\n///\r\n/// @see    $object\r\n///\r\n/// @example\r\n///   <selector> {\r\n///     @include mixinDimensions(100%);\r\n///     @include mixinDimensions(100%, 50%);\r\n///   }\r\n///\r\n@mixin dimensions($width, $height:$width) {\r\n\twidth: $width;\r\n\theight: $height;\r\n}\r\n\r\n\r\n///\r\n/// Mixin generate animation. It uses an additional function :\r\n/// - **map-get()**   - returns the value in a map associated with the given key. If the map doesn’t have such a key, returns null;\r\n/// - **map-merge()** - Merges two maps together into a new map. Keys in $map2 will take precedence over keys in $map1;\r\n///\r\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#map_get-instance_method       map-get()\r\n/// @link http://sass-lang.com/documentation/Sass/Script/Functions.html#map_merge-instance_method     map-merge()\r\n///\r\n/// @name   mixinKeyframes\r\n///\r\n/// @param  {String}  $keyName - Animation Name\r\n/// @param  {Object}  $options\r\n///\r\n/// @example\r\n///   <selector> {\r\n///     @include moduleKeyframes(clockLeft,\r\n///       (\r\n///         opacityStart      : 0.8,\r\n///         opacityEnd        : 1,\r\n///         transformStart    : rotate(360deg)\r\n///       )\r\n///       ||\r\n///       (\r\n///         opacityStart      : 0.5,\r\n///         opacityEnd        : 1,\r\n///         transformDouble   : (rotate(-360deg) scale(0.5))\r\n///       )\r\n///     );\r\n///   }\r\n///\r\n@mixin keyframes($keyName, $options: ()) {\r\n\t$configuration: map-merge((), $options);\r\n\r\n\t@keyframes #{$keyName} {\r\n\t\tfrom {\r\n\t\t\topacity: map-get($configuration, opacityStart);\r\n\t\t\ttransform: map-get($configuration, transformStart);\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: map-get($configuration, opacityEnd);\r\n\t\t\ttransform: map-get($configuration, transformEnd);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n///\r\n/// Mixin horizontal centered\r\n///\r\n@mixin marginAuto {\r\n\tmargin: {\r\n\t\tleft: auto;\r\n\t\tright: auto;\r\n\t}\r\n}\r\n\r\n\r\n///\r\n/// Mixin placeholder for: input, textarea\r\n///\r\n@mixin inputPlaceholder {\r\n\t&.placeholder { @content; }\r\n\t&:-moz-placeholder { @content; }\r\n\t&::-moz-placeholder { @content; }\r\n\t&:-ms-input-placeholder { @content; }\r\n\t&::-webkit-input-placeholder { @content; }\r\n}\r\n\r\n\r\n///\r\n/// Mixin css triangle\r\n///\r\n@mixin pseudo($display: block, $pos: absolute, $content: ''){\r\n\tcontent: $content;\r\n\tdisplay: $display;\r\n\tposition: $pos;\r\n}\r\n@mixin cssTriangle($color, $direction, $size: 6px, $position: absolute, $round: false){\r\n\t@include pseudo($pos: $position);\r\n\r\n\twidth: 0;\r\n\theight: 0;\r\n\r\n\t@if ($round) {\r\n\t\tborder-radius: 3px;\r\n\t}\r\n\r\n\t@if ($direction == down) {\r\n\t\tborder-left: $size solid transparent;\r\n\t\tborder-right: $size solid transparent;\r\n\t\tborder-top: $size solid $color;\r\n\t\tmargin-top: 0 - round( $size / 2.5 );\r\n\t} @else if ($direction == up) {\r\n\t\tborder-left: $size solid transparent;\r\n\t\tborder-right: $size solid transparent;\r\n\t\tborder-bottom: $size solid $color;\r\n\t\tmargin-bottom: 0 - round( $size / 2.5 );\r\n\t} @else if ($direction == right) {\r\n\t\tborder-top: $size solid transparent;\r\n\t\tborder-bottom: $size solid transparent;\r\n\t\tborder-left: $size solid $color;\r\n\t\tmargin-right: -$size;\r\n\t} @else if ($direction == left) {\r\n\t\tborder-top: $size solid transparent;\r\n\t\tborder-bottom: $size solid transparent;\r\n\t\tborder-right: $size solid $color;\r\n\t\tmargin-left: -$size;\r\n\t}\r\n}\r\n\r\n\r\n///\r\n/// Mixin center: vertical, horizontal, or both\r\n///\r\n@mixin centered($prop: absolute, $position: both) {\r\n\tposition: $prop;\r\n\r\n\t@if ($position == 'vertical') {\r\n\t\ttop: 50%;\r\n\t\ttransform: translateY(-50%);\r\n\t}\r\n\t@else if ($position == 'horizontal') {\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%);\r\n\t}\r\n\t@else if ($position == 'both') {\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t}\r\n}\r\n\r\n\r\n///\r\n/// Mixin transition\r\n///\r\n@mixin transition($rest...) {\r\n\t$list: null;\r\n\t$duration: null;\r\n\t$idx: null;\r\n\r\n\t@each $prop in ($rest) {\r\n\t\t$idx: str_index(inspect($prop), \"0.\");\r\n\r\n\t\t@if($idx == null) {\r\n\t\t\t$duration: 0.3s;\r\n\t\t}\r\n\r\n\t\t$list: append($list, $prop $duration ease-in-out, comma);\r\n\t}\r\n\r\n\ttransition: $list;\r\n}\r\n\r\n\r\n///\r\n/// Mixin fluid\r\n///\r\n/// @example\r\n///\r\n///\t\t<selector> {\r\n///\t\t\t// single\r\n///\t\t\t@include fluid(font-size, 320px, 1366px, 14px, 22px);\r\n///\r\n///\t\t\t// multiple\r\n///\t\t\t@include fluid(padding-bottom padding-top, 20em, 70em, 2em, 4em);\r\n///\r\n///\t\t}\r\n///\r\n@mixin fluid($properties, $min-vw, $max-vw, $min-value, $max-value) {\r\n\t@each $property in $properties {\r\n\t\t#{$property}: $min-value;\r\n\t}\r\n\r\n\t@media screen and (min-width: $min-vw) {\r\n\t\t@each $property in $properties {\r\n\t\t\t#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (min-width: $max-vw) {\r\n\t\t@each $property in $properties {\r\n\t\t\t#{$property}: $max-value;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n///\r\n/// Mixin consistent Font Sizes\r\n///\r\n///\t@name font-size\r\n///\r\n/// @example\r\n///\r\n///\t\tp {\r\n///  \t\t@include font-size(14px)\r\n///\t\t}\r\n///\r\n///\r\n@mixin font-size($size) {\r\n\tfont-size: $size;\r\n\tfont-size: calculateRem($size);\r\n}\r\n\r\n\r\n///\r\n/// Mixin Quick Gradients\r\n///\r\n///\t@name background-gradient\r\n///\r\n///\t@example\r\n///\r\n///\t\tselector {\r\n///\t\t\t@include background-gradient(red, black, 'vertical');\r\n///\t\t}\r\n///\r\n@mixin background-gradient($start-color, $end-color, $orientation) {\r\n\tbackground: $start-color;\r\n\r\n\t@if $orientation == 'vertical' {\r\n\t\tbackground: linear-gradient(to bottom, $start-color, $end-color);\r\n\t}\r\n\t@else if $orientation == 'horizontal' {\r\n\t\tbackground: linear-gradient(to right, $start-color, $end-color);\r\n\t}\r\n\t@else {\r\n\t\tbackground: radial-gradient(ellipse at center, $start-color, $end-color);\r\n\t}\r\n}\r\n\r\n\r\n///\r\n/// Mixin media queries.\r\n///\r\n$breakpointsMedia: (\r\n\textra-small     \t: \"(min-width: 320px)\", \t/// extra-small\r\n\tmax-extra-small \t: \"(max-width: 575px)\",\r\n\tsmall         \t\t: \"(min-width: 576px)\", \t/// small\r\n\tmax-small     \t\t: \"(max-width: 767px)\",\r\n\tmedium         \t\t: \"(min-width: 768px)\", \t/// medium\r\n\tmax-medium     \t\t: \"(max-width: 991px)\",\r\n\tlarge         \t\t: \"(min-width: 992px)\", \t/// large\r\n\tmax-large\t\t\t\t\t: \"(max-width: 1199px)\",\r\n\textra-large     \t: \"(min-width: 1200px)\",\t/// extra-large\r\n\tmax-extra-large \t: \"(max-width: 1365px)\",\r\n\twide-small      \t: \"(min-width: 1366px)\",\t/// wide-small\r\n\tmax-wide-small \t\t: \"(max-width: 1439px)\",\r\n\twide-medium     \t: \"(min-width: 1440px)\",\t/// wide-medium\r\n\tmax-wide-medium \t: \"(max-width: 1599px)\",\r\n\twide-large      \t: \"(min-width: 1600px)\",\t/// wide-large\r\n\tmax-wide-large    : \"(max-width: 1919px)\",\r\n\thd        \t\t\t\t: \"(min-width: 1920px)\"\t\t/// hd\r\n) !default;\r\n\r\n@mixin respond($name) {\r\n\t@if map-has-key($breakpointsMedia, $name) {\r\n\t\t@media screen and #{inspect(map-get($breakpointsMedia, $name))} {\r\n\t\t\t@content;\r\n\t\t}\r\n\t} @else {\r\n\t\t@warn \"Unfortunately, no value could be retrieved from `#{$breakpointsMedia}`. Please make sure it is defined in `$breakpointsMedia` map.\";\r\n\t}\r\n}\r\n@mixin respondCustom($val) {\r\n\t@media screen and #{$val} {\r\n\t\t@content;\r\n\t}\r\n}\r\n@mixin adaptive($val) {\r\n\t@media screen and (max-width: #{$val}px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n","///\r\n/// ADDITIONALLY\r\n/// ===============\r\n$maxWidth: 1200px;\r\n$paddingLeft: 15px;\r\n$paddingRight: $paddingLeft;\r\n\r\n%grid {\r\n  width: 100%;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-right: $paddingRight;\r\n  padding-left: $paddingLeft;\r\n}\r\n\r\n\r\n///\r\n/// MAIN\r\n/// ===============\r\n.c-grid {\r\n  @extend %grid;\r\n  @if($maxWidth) {\r\n    max-width: $maxWidth;\r\n  }\r\n\r\n\r\n  &-fluid {\r\n    @extend %grid;\r\n    max-width: 100%;\r\n  }\r\n}\r\n\r\n\r\n// for develop - pls del for production\r\n.c-grid {\r\n  @include respond(small) {\r\n    max-width: $maxWidth;\r\n  }\r\n  @include respond(large) {\r\n    max-width: $maxWidth;\r\n  }\r\n  @include respond(extra-large) {\r\n    max-width: $maxWidth;\r\n  }\r\n  @include respond(medium) {\r\n    max-width: $maxWidth;\r\n  }\r\n  @include respond(wide-small) {\r\n    max-width: $maxWidth;\r\n  }\r\n}"],"sourceRoot":"../../src"}